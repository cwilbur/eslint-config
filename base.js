const eslintComments = {
  'eslint-comments/disable-enable-pair': [ 'error', { allowWholeFile: true } ],
  'eslint-comments/no-aggregating-enable': 'error',
  'eslint-comments/no-duplicate-disable': 'error',
  'eslint-comments/no-restricted-disable': 'off',
  'eslint-comments/no-unlimited-disable': 'error',
  'eslint-comments/no-unused-disable': 'error',
  'eslint-comments/no-unused-enable': 'error',
  'eslint-comments/no-use': 'off',
  'eslint-comments/require-description': 'error'
}

const eslintRecommended = {
  'constructor-super': 'error',
  'for-direction': 'error',
  'getter-return': 'error',
  'no-async-promise-executor': 'error',
  'no-case-declarations': 'error',
  'no-class-assign': 'error',
  'no-compare-neg-zero': 'error',
  'no-cond-assign': 'error',
  'no-const-assign': 'error',
  'no-constant-condition': 'error',
  'no-control-regex': 'error',
  'no-debugger': 'error',
  'no-delete-var': 'error',
  'no-dupe-args': 'error',
  'no-dupe-class-members': 'error',
  'no-dupe-else-if': 'error',
  'no-dupe-keys': 'error',
  'no-duplicate-case': 'error',
  'no-empty': 'error',
  'no-empty-character-class': 'error',
  'no-empty-pattern': 'error',
  'no-ex-assign': 'error',
  'no-extra-boolean-cast': 'error',
  'no-extra-semi': 'error',
  'no-fallthrough': 'error',
  'no-func-assign': 'error',
  'no-global-assign': 'error',
  'no-import-assign': 'error',
  'no-inner-declarations': 'error',
  'no-invalid-regexp': 'error',
  'no-irregular-whitespace': 'error',
  'no-loss-of-precision': 'error',
  'no-misleading-character-class': 'error',
  'no-mixed-spaces-and-tabs': 'error',
  'no-new-symbol': 'error',
  'no-nonoctal-decimal-escape': 'error',
  'no-obj-calls': 'error',
  'no-octal': 'error',
  'no-prototype-builtins': 'error',
  'no-redeclare': 'error',
  'no-regex-spaces': 'error',
  'no-self-assign': 'error',
  'no-setter-return': 'error',
  'no-shadow-restricted-names': 'error',
  'no-sparse-arrays': 'error',
  'no-this-before-super': 'error',
  'no-undef': 'error',
  'no-unexpected-multiline': 'error',
  'no-unreachable': 'error',
  'no-unsafe-finally': 'error',
  'no-unsafe-negation': 'error',
  'no-unsafe-optional-chaining': 'error',
  'no-unused-labels': 'error',
  'no-unused-vars': 'error',
  'no-useless-backreference': 'error',
  'no-useless-catch': 'error',
  'no-useless-escape': 'error',
  'no-with': 'error',
  'require-yield': 'error',
  'use-isnan': 'error',
  'valid-typeof': 'error'
}

const unknownSourceOff = [
  'capitalized-comments',
  'func-names',
  'multiline-comment-style',
  'no-extra-parens',
  'no-inline-comments',
  'no-magic-numbers',
  'no-nested-ternary',
  'no-ternary',
  'no-void',
  'one-var',
  'padded-blocks',
  'prefer-arrow-callback',
  'sort-keys'
]

const unknownSourceErrors = [ 'accessor-pairs',
  'array-callback-return',
  'arrow-body-style',
  'block-scoped-var',
  'block-spacing',
  'brace-style',
  'camelcase',
  'class-methods-use-this',
  'complexity',
  'computed-property-spacing',
  'consistent-return',
  'consistent-this',
  'default-case',
  'default-case-last',
  'default-param-last',
  'dot-notation',
  'eol-last',
  'eqeqeq',
  'func-name-matching',
  'generator-star-spacing',
  'grouped-accessor-pairs',
  'guard-for-in',
  'id-denylist',
  'id-match',
  'init-declarations',
  'jsx-quotes',
  'key-spacing',
  'lines-around-comment',
  'lines-between-class-members',
  'max-classes-per-file',
  'max-depth',
  'max-lines-per-function',
  'max-nested-callbacks',
  'max-statements',
  'max-statements-per-line',
  'new-parens',
  'no-alert',
  'no-array-constructor',
  'no-bitwise',
  'no-caller',
  'no-confusing-arrow',
  'no-constructor-return',
  'no-continue',
  'no-div-regex',
  'no-duplicate-imports',
  'no-else-return',
  'no-empty-function',
  'no-eq-null',
  'no-eval',
  'no-extend-native',
  'no-extra-bind',
  'no-extra-label',
  'no-floating-decimal',
  'no-implicit-coercion',
  'no-implicit-globals',
  'no-implied-eval',
  'no-iterator',
  'no-label-var',
  'no-labels',
  'no-lone-blocks',
  'no-lonely-if',
  'no-loop-func',
  'no-mixed-operators',
  'no-multi-assign',
  'no-multi-spaces',
  'no-multi-str',
  'no-negated-condition',
  'no-new',
  'no-new-func',
  'no-new-object',
  'no-new-wrappers',
  'no-octal-escape',
  'no-promise-executor-return',
  'no-proto',
  'no-restricted-exports',
  'no-restricted-globals',
  'no-restricted-imports',
  'no-restricted-properties',
  'no-restricted-syntax',
  'no-return-assign',
  'no-script-url',
  'no-self-compare',
  'no-sequences',
  'no-shadow',
  'no-tabs',
  'no-template-curly-in-string',
  'no-throw-literal',
  'no-trailing-spaces',
  'no-undef-init',
  'no-undefined',
  'no-unmodified-loop-condition',
  'no-unneeded-ternary',
  'no-unreachable-loop',
  'no-use-before-define',
  'no-useless-call',
  'no-useless-computed-key',
  'no-useless-concat',
  'no-useless-constructor',
  'no-useless-rename',
  'no-useless-return',
  'no-var',
  'no-whitespace-before-property',
  'nonblock-statement-body-position',
  'object-curly-newline',
  'object-shorthand',
  'one-var-declaration-per-line',
  'operator-assignment',
  'padding-line-between-statements',
  'prefer-const',
  'prefer-destructuring',
  'prefer-exponentiation-operator',
  'prefer-named-capture-group',
  'prefer-numeric-literals',
  'prefer-object-spread',
  'prefer-promise-reject-errors',
  'prefer-regex-literals',
  'prefer-rest-params',
  'prefer-spread',
  'prefer-template',
  'radix',
  'require-atomic-updates',
  'require-await',
  'require-unicode-regexp',
  'rest-spread-spacing',
  'semi-spacing',
  'semi-style',
  'sort-vars',
  'space-infix-ops',
  'space-unary-ops',
  'symbol-description',
  'template-tag-spacing',
  'vars-on-top',
  'wrap-iife',
  'wrap-regex',
  'yield-star-spacing' ]

const unknownSourceRules = Object.fromEntries([
  ...unknownSourceOff.map(key => [ key, 'off' ]),
  ...unknownSourceErrors.map(key => [ key, 'error' ])
])

const myPreferences = {
  'accessor-pairs': 'error',
  'array-bracket-newline': [ 'error', 'consistent' ],
  'array-bracket-spacing': [ 'error', 'always', { objectsInArrays: true, arraysInArrays: true } ],
  'array-element-newline': [ 'error', 'consistent' ],
  'arrow-parens': [ 'error', 'as-needed' ],
  'arrow-spacing': [ 'error', { before: true, after: true } ],
  'class-methods-use-this': 'warn',
  'comma-dangle': [ 'error', 'never' ],
  'comma-spacing': [ 'error', { after: true, before: false } ],
  'comma-style': [ 'error', 'last' ],
  'curly': [ 'error', 'multi-line' ],
  'dot-location': [ 'error', 'property' ],
  'func-call-spacing': [ 'error', 'never' ],
  'func-style': 'off',
  'function-call-argument-newline': [ 'error', 'consistent' ],
  'function-paren-newline': [ 'error', 'consistent' ],
  'grouped-accessor-pairs': 'error',
  'id-length': [ 'error', { min: 2, exceptions: [ '_', 'i' ] } ],
  'implicit-arrow-linebreak': [ 'error', 'beside' ],
  'indent': [ 'error', 2, { flatTernaryExpressions: true, offsetTernaryExpressions: true, SwitchCase: 1 } ],
  'keyword-spacing': [ 'error', { before: true, after: true } ],
  'line-comment-position': 'off',
  'linebreak-style': [ 'error', 'unix' ],
  'max-len': [ 'error', { code: 120, ignoreUrls: true, ignoreStrings: true, ignoreTemplateLiterals: true } ],
  'max-lines': [ 'error', 500 ],
  'max-params': [ 'error', 5 ],
  'max-statements': [ 'error', 20 ],
  'multiline-ternary': [ 'error', 'always-multiline' ],
  'newline-per-chained-call': [ 'error', { ignoreChainWithDepth: 3 } ],
  'no-await-in-loop': 'off',
  'no-console': 'error',
  'no-multiple-empty-lines': [ 'error', { max: 1 } ],
  'no-param-reassign': [ 'error', { props: false } ],
  'no-plusplus': [ 'error', { allowForLoopAfterthoughts: true } ],
  'no-return-await': 'error',
  'no-underscore-dangle': 'off',
  'no-unused-vars': [ 'warn', { varsIgnorePattern: '^_', args: 'none' } ],
  'no-warning-comments': 'off',
  'object-curly-spacing': [ 'error', 'always', { arraysInObjects: true, objectsInObjects: true } ],
  'operator-linebreak': [ 'error', 'before' ],
  'quote-props': [ 'error', 'consistent-as-needed', { keywords: false } ],
  'quotes': [ 'error', 'single', { avoidEscape: true } ],
  'semi': [ 'error', 'never' ],
  'space-before-blocks': [ 'error', 'always' ],
  'space-before-function-paren': [ 'error', 'always' ],
  'space-in-parens': [ 'error', 'never' ],
  'spaced-comment': [ 'error', 'always', { markers: [ '/' ] } ],
  'strict': 'off',
  'switch-colon-spacing': [ 'error', { before: false, after: true } ],
  'template-curly-spacing': [ 'error', 'always' ],
  'unicode-bom': [ 'error', 'never' ],
  'yoda': [ 'error', 'never' ]
}

module.exports = {
  root: true,
  plugins: [ 'eslint-comments', 'json', 'html' ],
  rules: {
    ...eslintComments,
    ...unknownSourceRules,
    ...eslintRecommended,
    ...myPreferences
  }
}

//
