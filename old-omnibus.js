
/* eslint max-len: [ 'error', { 'code': 200 } ]
-- this is a config filewith a sinle object in it.*/

module.exports = {
  root: true,
  ignorePatterns: [ 'build/**/*', 'dist/**/*', 'node_modules/**/*' ],
  env: {
    browser: true,
    es2021: true,
    node: true
  },
  'extends': [
    'standard',
    'eslint:recommended',
    'plugin:jasmine/recommended',
    'plugin:eslint-comments/recommended',
    'plugin:node/recommended',
    'plugin:vue/vue3-recommended'
  ],
  parser: 'vue-eslint-parser',
  parserOptions: {
    parser: '@babel/eslint-parser',
    ecmaVersion: 2020,
    sourceType: 'module',
    babelOptions: {
      rootMode: 'upward'
    }
  },
  plugins: [ 'promise', 'node', 'import', 'json', '@babel', 'import-newlines', 'jasmine', 'vue', 'mocha' ],
  settings: {
    node: {
      allowModules: [],
      resolvePaths: [ __dirname ],
      tryExtensions: [ '.js', '.mjs', '.cjs' ]
    }
  },

  globals: {
    ga: 'readonly', // Google Analytics
    cordova: 'readonly',
    __statics: 'readonly',
    __QUASAR_SSR__: 'readonly',
    __QUASAR_SSR_SERVER__: 'readonly',
    __QUASAR_SSR_CLIENT__: 'readonly',
    __QUASAR_SSR_PWA__: 'readonly',
    process: 'readonly',
    Capacitor: 'readonly',
    chrome: 'readonly'
  },
  rules: {
    'import-newlines/enforce': [ 'error', { items: 8, 'max-len': 120, semi: false } ],
    'import/no-useless-path-segments': [ 'error', { noUselessIndex: false } ],
    'import/no-extraneous-dependencies': 'error',
    'import/no-commonjs': 'error',
    'import/no-amd': 'error',
    'import/no-import-module-exports': 'error',
    'import/first': 'error',
    'import/exports-last': 'error',
    'import/no-duplicates': 'error',
    'import/extensions': [ 'error', 'always' ],
    'import/order': [
      'error', {
        groups: [ 'builtin', 'external', 'parent', 'sibling', 'index' ],
        alphabetize: { order: 'asc', caseInsensitive: true }
      }
    ],
    'import/newline-after-import': 'error',
    'import/prefer-default-export': 'error',
    'import/group-exports': 'error',

    'jasmine/expect-matcher': 'error',
    'jasmine/expect-single-argument': 'error',
    'jasmine/missing-expect': 'error',
    'jasmine/named-spy': 'warn',
    'jasmine/new-line-before-expect': 'warn',
    'jasmine/new-line-between-declarations': 'warn',
    'jasmine/no-assign-spyon': 'warn',
    'jasmine/no-describe-variables': 'error',
    'jasmine/no-disabled-tests': 'warn',
    'jasmine/no-expect-in-setup-teardown': 'error',
    'jasmine/no-focused-tests': 'warn',
    'jasmine/no-global-setup': 'error',
    'jasmine/no-pending-tests': 'warn',
    'jasmine/no-promise-without-done-fail': 'warn',
    'jasmine/no-spec-dupes': [ 'error', 'branch' ],
    'jasmine/no-suite-callback-args': 'error',
    'jasmine/no-suite-dupes': [ 'error', 'branch' ],
    'jasmine/no-unsafe-spy': 'error',
    'jasmine/prefer-jasmine-matcher': 'error',
    'jasmine/prefer-promise-strategies': 'error',
    'jasmine/prefer-toBeUndefined': [ 'warn', 'always' ],
    'jasmine/prefer-toHaveBeenCalledWith': 'warn',

    'eslint-comments/disable-enable-pair': [ 'error', { allowWholeFile: true } ],
    'eslint-comments/no-aggregating-enable': 'error',
    'eslint-comments/no-duplicate-disable': 'error',
    'eslint-comments/no-unlimited-disable': 'error',
    'eslint-comments/no-unused-disable': 'error',
    'eslint-comments/no-unused-enable': 'error',
    'eslint-comments/no-restricted-disable': 'off',
    'eslint-comments/no-use': 'off',
    'eslint-comments/require-description': 'error',

    'node/handle-callback-err': 'error',
    'node/no-callback-literal': 'error',
    'node/no-exports-assign': 'error',
    'node/no-extraneous-import': 'error',
    'node/no-missing-import': 'error',
    'node/no-extraneous-require': 'error',
    'node/no-missing-require': 'error',
    'node/no-new-require': 'error',
    'node/no-path-concat': 'error',
    'node/no-process-exit': 'error',
    'node/no-unpublished-bin': 'error',
    'node/no-unpublished-import': 'error',
    'node/no-unpublished-require': 'error',
    'node/no-unsupported-features/es-builtins': 'error',
    'node/no-unsupported-features/es-syntax': 'error',
    'node/no-unsupported-features/node-builtins': 'error',
    'node/process-exit-as-throw': 'error',
    'node/shebang': 'error',
    'node/no-deprecated-api': 'error',
    'node/callback-return': 'error',
    'node/exports-style': [ 'error', 'module.exports', { allowBatchAssign: true } ],
    'node/file-extension-in-import': [ 'error', 'always' ],
    'node/global-require': 'error',
    'node/no-mixed-requires': [ 'error', { grouping: true, allowCall: true } ],
    'node/no-process-env': 'error',
    'node/no-restricted-import': 'off',
    'node/no-restricted-require': 'off',
    'node/no-sync': 'error',
    'node/prefer-global/buffer': [ 'error', 'always' ],
    'node/prefer-global/console': [ 'error', 'always' ],
    'node/prefer-global/process': [ 'error', 'always' ],
    'node/prefer-global/text-decoder': [ 'error', 'always' ],
    'node/prefer-global/url-search-params': [ 'error', 'always' ],
    'node/prefer-global/url': [ 'error', 'always' ],
    'node/prefer-promises/dns': 'error',
    'node/prefer-promises/fs': 'error',

    'vue/max-attributes-per-line': [ 'error', { singleline: { max: 4 }, multiline: { max: 2 } } ],
    'vue/singleline-html-element-content-newline': 'off',

    'json/*': [ 'error', { allowComments: true } ],
    'multiline-ternary': [ 'error', 'always-multiline' ],
    'no-console': 'off',
    'no-debugger': 'off',
    // 'no-console': 'warn',
    // 'no-debugger': 'warn',
    'no-return-await': 'off',
    'no-unused-vars': [ 'warn', { varsIgnorePattern: '^_', args: 'none' } ],
    'vue/no-unused-vars': 'off',
    'no-param-reassign': [ 'error', { props: false } ],
    'array-bracket-spacing': [ 'error', 'always', { objectsInArrays: true, arraysInArrays: true } ],
    'no-await-in-loop': 'off',

    'new-cap': 'off',
    '@babel/new-cap': 1,

    'no-invalid-this': 'off',
    '@babel/no-invalid-this': 1,

    'object-curly-spacing': 'off',
    '@babel/object-curly-spacing': [
      'error',
      'always',
      { arraysInObjects: true, objectsInObjects: true }
    ],

    semi: 'off',
    '@babel/semi': [ 'error', 'never' ],
    'max-params': [ 'error', 5 ],
    'no-unused-expressions': 'off',
    '@babel/no-unused-expressions': [ 'error', { allowShortCircuit: true, allowTernary: true } ],

    'array-element-newline': [ 'error', 'consistent' ],
    'arrow-parens': [ 'error', 'as-needed' ],
    'line-comment-position': 'off',
    'function-paren-newline': [ 'error', 'consistent' ],
    quotes: [ 'error', 'single', { avoidEscape: true } ],
    'function-call-argument-newline': [ 'error', 'consistent' ],
    'func-style': 'off',
    'no-underscore-dangle': 'off',
    indent: [
      'error',
      2,
      { flatTernaryExpressions: true, offsetTernaryExpressions: true, SwitchCase: 1 }
    ],
    'id-length': [ 'error', { min: 2, exceptions: [ '_' ] } ],
    'no-warning-comments': 'off',
    'max-len': [ 'error', { code: 120, ignoreUrls: true, ignoreStrings: true } ],
    'quote-props': [ 'error', 'as-needed', { keywords: true, unnecessary: true } ],
    'space-before-function-paren': [ 'error', 'always' ],
    'func-call-spacing': [ 'error', 'never' ],
    'max-lines': [ 'error', 500 ],

    // hereafter are the recommended ESLint rules from VSCode.

    'accessor-pairs': 'error',
    'array-bracket-newline': 'error',
    'array-callback-return': 'error',
    'arrow-body-style': 'error',
    'arrow-spacing': [ 'error', { after: true, before: true } ],
    'block-scoped-var': 'error',
    'block-spacing': 'error',
    'brace-style': 'error',
    camelcase: 'error',
    'capitalized-comments': 'off',
    'class-methods-use-this': 'error',
    'comma-dangle': 'error',
    'comma-spacing': [ 'error', { after: true, before: false } ],
    'comma-style': [ 'error', 'last' ],
    complexity: 'error',
    'computed-property-spacing': 'error',
    'consistent-return': 'error',
    'consistent-this': 'error',
    curly: 'error',
    'default-case': 'error',
    'default-case-last': 'error',
    'default-param-last': 'error',
    'dot-location': 'error',
    'dot-notation': 'error',
    'eol-last': 'error',
    eqeqeq: 'error',
    'func-name-matching': 'error',
    'func-names': 'off',
    'generator-star-spacing': 'error',
    'grouped-accessor-pairs': 'error',
    'guard-for-in': 'error',
    'id-denylist': 'error',
    'id-match': 'error',
    'implicit-arrow-linebreak': [ 'error', 'beside' ],
    'init-declarations': 'error',
    'jsx-quotes': 'error',
    'key-spacing': 'error',
    'keyword-spacing': [ 'error', { after: true, before: true } ],
    'linebreak-style': [ 'error', 'unix' ],
    'lines-around-comment': 'error',
    'lines-between-class-members': 'error',
    'max-classes-per-file': 'error',
    'max-depth': 'error',
    'max-lines-per-function': 'error',
    'max-nested-callbacks': 'error',
    'max-statements': 'error',
    'max-statements-per-line': 'error',
    'multiline-comment-style': 'off',
    'new-parens': 'error',
    'newline-per-chained-call': [ 'error', { ignoreChainWithDepth: 3 } ],
    'no-alert': 'error',
    'no-array-constructor': 'error',
    'no-bitwise': 'error',
    'no-caller': 'error',
    'no-confusing-arrow': 'error',
    'no-constructor-return': 'error',
    'no-continue': 'error',
    'no-div-regex': 'error',
    'no-duplicate-imports': 'error',
    'no-else-return': 'error',
    'no-empty-function': 'error',
    'no-eq-null': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-label': 'error',
    'no-extra-parens': 'off',
    'no-floating-decimal': 'error',
    'no-implicit-coercion': 'error',
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    'no-inline-comments': 'off',
    'no-iterator': 'error',
    'no-label-var': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-lonely-if': 'error',
    'no-loop-func': 'error',
    'no-loss-of-precision': 'error',
    'no-magic-numbers': 'off',
    'no-mixed-operators': 'error',
    'no-multi-assign': 'error',
    'no-multi-spaces': 'error',
    'no-multi-str': 'error',
    'no-multiple-empty-lines': [ 'error', { max: 1 } ],
    'no-negated-condition': 'error',
    'no-nested-ternary': 'off',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-object': 'error',
    'no-new-wrappers': 'error',
    'no-nonoctal-decimal-escape': 'error',
    'no-octal-escape': 'error',
    'no-plusplus': 'error',
    'no-promise-executor-return': 'error',
    'no-proto': 'error',
    'no-restricted-exports': 'error',
    'no-restricted-globals': 'error',
    'no-restricted-imports': 'error',
    'no-restricted-properties': 'error',
    'no-restricted-syntax': 'error',
    'no-return-assign': 'error',
    'no-script-url': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-shadow': 'error',
    'no-tabs': 'error',
    'no-template-curly-in-string': 'error',
    'no-ternary': 'off',
    'no-throw-literal': 'error',
    'no-trailing-spaces': 'error',
    'no-undef-init': 'error',
    'no-undefined': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-unneeded-ternary': 'error',
    'no-unreachable-loop': 'error',
    'no-unsafe-optional-chaining': 'error',
    'no-use-before-define': 'error',
    'no-useless-backreference': 'error',
    'no-useless-call': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-concat': 'error',
    'no-useless-constructor': 'error',
    'no-useless-rename': 'error',
    'no-useless-return': 'error',
    'no-var': 'error',
    'no-void': 'off',
    'no-whitespace-before-property': 'error',
    'nonblock-statement-body-position': 'error',
    'object-curly-newline': 'error',
    'object-shorthand': 'error',
    'one-var': 'off',
    'one-var-declaration-per-line': 'error',
    'operator-assignment': 'error',
    'padded-blocks': 'off',
    'padding-line-between-statements': 'error',
    'prefer-arrow-callback': 'off',
    'prefer-const': 'error',
    'prefer-destructuring': 'error',
    'prefer-exponentiation-operator': 'error',
    'prefer-named-capture-group': 'error',
    'prefer-numeric-literals': 'error',
    'prefer-object-spread': 'error',
    'prefer-promise-reject-errors': 'error',
    'prefer-regex-literals': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    radix: 'error',
    'require-atomic-updates': 'error',
    'require-await': 'error',
    'require-unicode-regexp': 'error',
    'rest-spread-spacing': 'error',
    'semi-spacing': 'error',
    'semi-style': 'error',
    'sort-keys': 'off',
    'sort-vars': 'error',
    'space-before-blocks': 'error',
    'space-in-parens': [ 'error', 'never' ],
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    'spaced-comment': [ 'error', 'always' ],
    strict: 'error',
    'switch-colon-spacing': 'error',
    'symbol-description': 'error',
    'template-curly-spacing': 'error',
    'template-tag-spacing': 'error',
    'unicode-bom': [ 'error', 'never' ],
    'vars-on-top': 'error',
    'wrap-iife': 'error',
    'wrap-regex': 'error',
    'yield-star-spacing': 'error',
    yoda: [ 'error', 'never' ]
  },
  overrides: [
    {
      files: [ '**/*.vue' ],
      globals: {
        defineExpose: 'readonly'
      }
    },
    {
      files: [
        '.eslintrc.js',
        '.mocharc.js',
        'babel.config.js',
        'webpack.config.js',
        'webpack-tests.config.js',
        'spec/tests.js'
      ],
      rules: {
        'import/no-commonjs': 'off'
      }
    }
  ]
}
